<?xml version="1.0" encoding="utf-8"?>

<!--

BigBlueButton open source conferencing system - http://www.bigbluebutton.org/

Copyright (c) 2015 BigBlueButton Inc. and by respective authors (see below).

This program is free software; you can redistribute it and/or modify it under the
terms of the GNU Lesser General Public License as published by the Free Software
Foundation; either version 3.0 of the License, or (at your option) any later
version.

BigBlueButton is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along
with BigBlueButton; if not, see <http://www.gnu.org/licenses/>.

-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
          xmlns:mate="http://mate.asfusion.com/"
          verticalScrollPolicy="off"
          horizontalScrollPolicy="off"
          horizontalAlign="center"
          showCloseButton="true"
          close="onCancelClicked()"
          creationComplete="onCreationComplete()"
          height="90"
          width="300"
          title="{ResourceUtil.getInstance().getString('bbb.logout.confirm.title')}">

  <mx:Script>
    <![CDATA[
      import com.asfusion.mate.events.Dispatcher;

      import mx.managers.PopUpManager;
      import org.bigbluebutton.common.Images;
      import org.bigbluebutton.common.LogUtil;
      import org.bigbluebutton.core.UsersUtil;
      import org.bigbluebutton.util.i18n.ResourceUtil;
      import org.bigbluebutton.modules.layout.events.LayoutEvent;
      import org.bigbluebutton.main.events.BBBEvent;
      import org.bigbluebutton.main.events.LogoutEvent;

      private var globalDispatcher:Dispatcher;

      private function endMeetingClickHandler():void {

        var eventEnd:BBBEvent = new BBBEvent(BBBEvent.LOGOUT_END_MEETING_EVENT)
        globalDispatcher.dispatchEvent(eventEnd);

        PopUpManager.removePopUp(this);
      }

      private function confirmButtonClickHandler():void {

        var eventLogout:LogoutEvent = new LogoutEvent(LogoutEvent.USER_LOGGED_OUT);
        globalDispatcher.dispatchEvent(eventLogout);

        PopUpManager.removePopUp(this);
      }


      private function cancelButtonClickHandler():void {
        PopUpManager.removePopUp(this);
      }

      private function onCreationComplete():void {
        cancelButton.setFocus();
        globalDispatcher = new Dispatcher();
        endMeetingButton.enabled = endMeetingButton.visible = endMeetingButton.includeInLayout = UsersUtil.amIModerator();
      }

      private function onCancelClicked():void {
        PopUpManager.removePopUp(this);
      }
    ]]>
  </mx:Script>

  <mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
            <mx:Text text="{ResourceUtil.getInstance().getString('bbb.logout.confirm.message')}" width="100%" height="100%" />
            <mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
                     <mx:Button id="endMeetingButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.endMeeting')}" click="endMeetingClickHandler()" enabled="false"/>
                     <mx:Button id="confimButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.yes')}" click="confirmButtonClickHandler()" enabled="true"/> 
                     <mx:Button id="cancelButton" height="22" label="{ResourceUtil.getInstance().getString('bbb.logout.confirm.no')}" click="cancelButtonClickHandler()" enabled="true"/>
           </mx:HBox>
  </mx:VBox>

</mx:TitleWindow>